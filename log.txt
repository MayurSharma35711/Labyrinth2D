8/2/2024 
- Here we will put our progress and changes for each file (preferably in as much detail as would be helpful)
- Set up the Github repository and worked out the old Github commands
- Found the old code Calvin had worked on for setting up, so going to read through that and set it up on my own later to have ways to connect multiple people together. He likely won't mind if I grab some old aspects of it, but I'll probably double check with him anyway. 
- Added an ideas file, that I left somewhat organized.
- Spoke more in-depth with Calvin to see what his thoughts were
	- Made point that if we want to learn use C++, if we want to make a game, use Unity (scripts are in C#)
	- Also, game dev life is long and hard

(Mayur's Opinion): Let's shoot for C++. both of us already mostly know the language (i definitely have some kinks i need to work out, but I generally know the language). It will be a better learning experience, there's some overhead to learn when it comes to packages, but the skills we pick up will probably be more reusable compared to Unity (unless you're planning on becoming a game dev). Once we learn some basic graphics, the first version of the simulated game is already more or less ready as well, so it's an easy start in that regard. 
In a sense, we can learn interesting algorithms and packages and memory structures while also constantly making interesting progress that should be able to continuously build, unlike something where we know less.

8/3/2024 
- Vivek has now set up GitHub. 
- I have also set up index html file on my computer. 
- We discussed the idea with appa as well, and doing it with JS seems like the least irritating way to do things, considering we care more about learning algorithms and basic graphics than doing a bunch of nonsensical garbage.

- Got the node, npm, and http-server to all work (npx http-server for Vivek).
- To run everything, we need to first install http-server through npm to localhost things
- After we run the local host, server, it will run the index.html file in the associated directory immediately
- This will help us actually run the pixijs file, which otherwise won't work.

- the command we actually have to run is npx http-server -c-1
- this prevents the data from caching so changes can be made